













































Generating Impact-Based Summaries for Scientific Literature


Proceedings of ACL-08: HLT, pages 816–824,
Columbus, Ohio, USA, June 2008. c©2008 Association for Computational Linguistics

Generating Impact-Based Summaries for Scientific Literature

Qiaozhu Mei
University of Illinois at Urbana-

Champaign
qmei2@uiuc.edu

ChengXiang Zhai
University of Illinois at Urbana-

Champaign
czhai@cs.uiuc.edu

Abstract

In this paper, we present a study of a novel
summarization problem, i.e., summarizing the
impact of a scientific publication. Given a pa-
per and its citation context, we study how to
extract sentences that can represent the most
influential content of the paper. We propose
language modeling methods for solving this
problem, and study how to incorporate fea-
tures such as authority and proximity to ac-
curately estimate the impact language model.
Experiment results on a SIGIR publication
collection show that the proposed methods
are effective for generating impact-based sum-
maries.

1 Introduction

The volume of scientific literature has been growing
rapidly. From recent statistics, each year 400,000
new citations are added to MEDLINE, the major
biomedical literature database 1. This fast growth
of literature makes it difficult for researchers, espe-
cially beginning researchers, to keep track of the re-
search trends and find high impact papers on unfa-
miliar topics.

Impact factors (Kaplan and Nelson, 2000) are
useful, but they are just numerical values, so they
cannot tell researchers which aspects of a paper are
influential. On the other hand, a regular content-
based summary (e.g., the abstract or conclusion sec-
tion of a paper or an automatically generated topical
summary (Giles et al., 1998)) can help a user know

1http://www.nlm.nih.gov/bsd/history/tsld024.htm

about the main content of a paper, but not necessar-
ily the most influential content of the paper. Indeed,
the abstract of a paper mostly reflects the expected
impact of the paper as perceived by the author(s),
which could significantly deviate from the actual im-
pact of the paper in the research community. More-
over, the impact of a paper changes over time due to
the evolution and progress of research in a field. For
example, an algorithm published a decade ago may
be no longer the state of the art, but the problem def-
inition in the same paper can be still well accepted.

Although much work has been done on text sum-
marization (See Section 6 for a detailed survey), to
the best of our knowledge, the problem of impact
summarization has not been studied before. In this
paper, we study this novel summarization problem
and propose language modeling-based approaches
to solving the problem. By definition, the impact
of a paper has to be judged based on the consent of
research community, especially by people who cited
it. Thus in order to generate an impact-based sum-
mary, we must use not only the original content, but
also the descriptions of that paper provided in papers
which cited it, making it a challenging task and dif-
ferent from a regular summarization setup such as
news summarization. Indeed, unlike a regular sum-
marization system which identifies and interprets the
topic of a document, an impact summarization sys-
tem should identify and interpret the impact of a pa-
per.

We define the impact summarization problem in
the framework of extraction-based text summariza-
tion (Luhn, 1958; McKeown and Radev, 1995), and
cast the problem as an impact sentence retrieval

816



problem. We propose language models to exploit
both the citation context and original content of a
paper to generate an impact-based summary. We
study how to incorporate features such as author-
ity and proximity into the estimation of language
models. We propose and evaluate several different
strategies for estimating the impact language model,
which is key to impact summarization. No exist-
ing test collection is available for evaluating impact
summarization. We construct a test collection us-
ing 28 years of ACM SIGIR papers (1978 - 2005)
to evaluate the proposed methods. Experiment re-
sults on this collection show that the proposed ap-
proaches are effective for generating impact-based
summaries. The results also show that using both the
original document content and the citation contexts
is important and incorporating citation authority and
proximity is beneficial.

An impact-based summary is not only useful for
facilitating the exploration of literature, but also
helpful for suggesting query terms for literature
retrieval, understanding the evolution of research
trends, and identifying the interactions of different
research fields. The proposed methods are also ap-
plicable to summarizing the impact of documents in
other domains where citation context exists, such as
emails and weblogs.

The rest of the paper is organized as follows. In
Section 2 and 3, we define the impact-based summa-
rization problem and propose the general language
modeling approach. In Section 4, we present differ-
ent strategies and features for estimating an impact
language model, a key challenge in impact summa-
rization. We discuss our experiments and results in
Section 5. Finally, the related work and conclusions
are discussed in Section 6 and Section 7.

2 Impact Summarization

Following the existing work on topical summariza-
tion of scientific literature (Paice, 1981; Paice and
Jones, 1993), we define an impact-based summary
of a paper as a set of sentences extracted from
a paper that can reflect the impact of the paper,
where “impact” is roughly defined as the influence
of the paper on research of similar or related top-
ics as reflected in the citations of the paper. Such
an extraction-based definition of summarization has

also been quite common in most existing general
summarization work (Radev et al., 2002).

By definition, in order to generate an impact sum-
mary of a paper, we must look at how other papers
cite the paper, use this information to infer the im-
pact of the paper, and select sentences from the orig-
inal paper that can reflect the inferred impact. Note
that we do not directly use the sentences from the ci-
tation context to form a summary. This is because in
citations, the discussion of the paper cited is usually
mixed with the content of the paper citing it, and
sometimes also with discussion about other papers
cited (Siddharthan and Teufel, 2007).

Formally, let d = (s0, s1, ..., sn) be a paper to
be summarized, where si is a sentence. We refer
to a sentence (in another paper) in which there is
an explicit citation of d as a citing sentence of d.
When a paper is cited, it is often discussed consec-
utively in more than one sentence near the citation,
thus intuitively we would like to consider a window
of sentences centered at a citing sentence; the win-
dow size would be a parameter to set. We call such
a window of sentences a citation context, and use C
to denote the union of all the citation contexts of d
in a collection of research papers. Thus C itself is
a set (more precisely bag) of sentences. The task
of impact-based summarization is thus to 1) con-
struct a representation of the impact of d, I , based
on d and C; 2) design a scoring function Score(.)
to rank sentences in d based on how well a sentence
reflects I . A user-defined number of top-ranked sen-
tences can then be selected as the impact summary
for d.

The formulation above immediately suggests that
we can cast the impact summarization problem as
a retrieval problem where each candidate sentence
in d is regarded as a “document,” the impact of the
paper (i.e., I) as a “query,” and our goal is to “re-
trieve” sentences that can reflect the impact of the
paper as indicated by the citation context. Looking
at the problem in this way, we see that there are two
main challenges in impact summarization: first, we
must be able to infer the impact based on both the
citation contexts and the original document; second,
we should measure how well a sentence reflects this
inferred impact. To solve these challenges, in the
next section, we propose to model impact with un-
igram language models and score sentences using

817



Kullback-Leibler divergence. We further propose
methods for estimating the impact language model
based on several features including the authority of
citations, and the citation proximity.

3 Language Models for Impact
Summarization

3.1 Impact language models

From the retrieval perspective, our collection is the
paper to be summarized, and each sentence is a
“document” to be retrieved. However, unlike in the
case of ad hoc retrieval, we do not really have a
query describing the impact of the paper; instead,
we have a lot of citation contexts that can be used
to infer information about the query. Thus the main
challenge in impact summarization is to effectively
construct a “virtual impact query” based on the cita-
tion contexts.

What should such a virtual impact query look
like? Intuitively, it should model the impact-
reflecting content of the paper. We thus propose to
represent such a virtual impact query with a unigram
language model. Such a model is expected to assign
high probabilities to those words that can describe
the impact of paper d, just as we expect a query
language model in ad hoc retrieval to assign high
probabilities to words that tend to occur in relevant
documents (Ponte and Croft, 1998). We call such a
language model the impact language model of paper
d (denoted as θI ); it can be estimated based on both
d and its citation context C as will be discussed in
Section 4.

3.2 KL-divergence scoring

With the impact language model in place, we
can then adopt many existing probabilistic retrieval
models such as the classical probabilistic retrieval
models (Robertson and Sparck Jones, 1976) and the
Kullback-Leibler (KL) divergence retrieval model
(Lafferty and Zhai, 2001; Zhai and Lafferty, 2001a),
to solve the problem of impact summarization by
scoring sentences based on the estimated impact lan-
guage model. In our study, we choose to use the KL-
divergence scoring method to score sentences as this
method has performed well for regular ad hoc re-
trieval tasks (Zhai and Lafferty, 2001a) and has an
information theoretic interpretation.

To apply the KL-divergence scoring method, we
assume that a candidate sentence s is generated from
a sentence language model θs. Given s in d and the
citation context C , we would first estimate θs based
on s and estimate θI based on C , and then score s
with the negative KL divergence of θs and θI . That
is,

Score(s) = −D(θI ||θs)

=
∑

w∈V

p(w|θI) log p(w|θs)−
∑

w∈V

p(w|θI) log p(w|θI)

where V is the set of words in our vocabulary and w
denotes a word.

From the information theoretic perspective, the
KL-divergence of θs and θI can be interpreted
as measuring the average number of bits wasted
in compressing messages generated according to
θI (i.e., impact descriptions) with coding non-
optimally designed based on θs. If θs and θI are
very close, the KL-divergence would be small and
Score(s) would be high, which intuitively makes
sense. Note that the second term (entropy of θI ) is
independent of s, so it can be ignored for ranking s.

We see that according to the KL-divergence scor-
ing method, our main tasks are to estimate θs and
θI . Since s can be regarded as a short document, we
can use any standard method to estimate θs. In this
work, we use Dirichlet prior smoothing (Zhai and
Lafferty, 2001b) to estimate θs as follows:

p(w|θs) =
c(w, s) + µs ∗ P (w|D)

|s|+ µs
(1)

where |s| is the length of s, c(w, s) is the count of
word w in s, p(w|D) is a background model esti-
mated using c(w,D)P

w′∈V
c(w′,D)

(D can be the set of all
the papers available to us) and µs is a smoothing pa-
rameter to be empirically set. Note that as the length
of a sentence is very short, smoothing is critical for
addressing the data sparseness problem.

The remaining challenge is to estimate θI accu-
rately based on d and its citation contexts.

4 Estimation of Impact Language Models

Intuitively, the impact of a paper is mostly reflected
in the citation context. Thus the estimation of the
impact language model should be primarily based
on the citation context C . However, we would like

818



our impact model to be able to help us select impact-
reflecting sentences from d, thus it is important for
the impact model to explain well the paper content
in general. To achieve this balance, we treat the ci-
tation context C as prior information and the current
document d as the observed data, and use Bayesian
estimation to estimate the impact language model.

Specifically, let p(w|C) be a citation context lan-
guage model estimated based on the citation con-
text C . We define Dirichlet prior with parameters
{µCp(w|C)}w∈V for the impact model, where µC
encodes our confidence on this prior and effectively
serves as a weighting parameter for balancing the
contribution of C and d for estimating the impact
model. Given the observed document d, the poste-
rior mean estimate of the impact model would be
(MacKay and Peto, 1995; Zhai and Lafferty, 2001b)

P (w|θI) =
c(w, d) + µcp(w|C)

|d| + µc
(2)

µc can be interpreted as the equivalent sample size of
our prior. Thus setting µc = |d| means that we put
equal weights on the citation context and the doc-
ument itself. µc = 0 yields p(w|θI) = p(w|d),
which is to say that the impact is entirely captured
by the paper itself, and our impact summarization
problem would then become the standard single doc-
ument (topical) summarization. Intuitively though,
we would want to set µc to a relatively large num-
ber to exploit the citation context in our estimation,
which is confirmed in our experiments.

An alternative way is to simply interpolate p(w|d)
and p(w|C) with a constant coefficient:

p(w|θI) = (1 − δ)p(w|d) + δp(w|C) (3)

We will compare the two strategies in Section 5.
How do we estimate p(w|C)? Intuitively, words

occurring in C frequently should have high proba-
bilities. A simple way is to pool together all the sen-
tences in C and use the maximum likelihood estima-
tor,

p(w|C) =

∑
s∈C c(w, s)∑

w′∈V

∑
s′∈C c(w

′, s′)
(4)

where c(w, s) is the count of w in s.
One deficiency of this simple estimate is that we

treat all the (extended) citation sentences equally.

However, there are at least two reasons why we want
to assign unequal weights to different citation sen-
tences: (1) A sentence closer to the citation label
should contribute more than one far away. (2) A sen-
tence occurring in a highly authorative paper should
contribute more than that in a less authorative paper.
To capture these two heuristics, we define a weight
coefficient αs for a sentence s in C as follows:

αs = pg(s)pr(s)

where pg(s) is an authority score of the paper con-
taining s and pr(s) is a proximity score that rewards
a sentence close to the citation label.

For example, pg(s) can be the PageRank value
(Brin and Page, 1998) of the document with s, which
measures the authority of the document based on a
citation graph, and is computed as follows: We con-
struct a directed graph from the collection of scien-
tific literature with each paper as a vertex and each
citation as a directed edge pointing from the citing
paper to the cited paper. We can then use the stan-
dard PageRank algorithm (Brin and Page, 1998) to
compute a PageRank value for each document. We
used this approach in our experiments.

We define pr(s) as pr(s) = 1
αk

, where k is the
distance (counted in terms of the number of sen-
tences) between sentence s and the center sentence
of the window containing s; by “center sentence”,
we mean the citing sentence containing the citation
label. Thus the sentence with the citation label will
have a proximity of 1 (because k = 0), while the
sentences away from the citation label will have a
decaying weight controlled by parameter α.

With αs, we can then use the following
“weighted” maximum likelihood estimate for the
impact language model:

p(w|C) =

∑
s∈C αsc(w, s)∑

w′∈V

∑
s′∈C αs′c(w

′, s′)
(5)

As we will show in Section 5, this weighted
maximum likelihood estimate performs better than
the simple maximum likelihood estimate, and both
pg(s) and pr(s) are useful.

819



5 Experiments and Results

5.1 Experiment Design

5.1.1 Test set construction

Because no existing test set is available for evalu-
ating impact summarization, we opt to create a test
set based on 28 years of ACM SIGIR papers (1978
- 2005) available through the ACM Digital Library2
and the SIGIR membership. Leveraging the explicit
citation information provided by ACM Digital Li-
brary, for each of the 1303 papers, we recorded all
other papers that cited the paper and extracted the
citation context from these citing papers. Each ci-
tation context contains 5 sentences with 2 sentences
before and after the citing sentence.

Since a low-impact paper would not be useful for
evaluating impact summarization, we took all the
14 papers from the SIGIR collection that have no
less than 20 citations by papers in the same col-
lection as candidate papers for evaluation. An ex-
pert in Information Retrieval field read each paper
and its citation context, and manually created an
impact-based summary by selecting all the “impact-
capturing” sentences from the paper. Specifically,
the expert first attempted to understand the most in-
fluential content of a paper by reading the citation
contexts. The expert then read each sentence of
the paper and made a decision whether the sentence
covers some “influential content” as indicated in the
citation contexts. The sentences that were decided
as covering some influential content were then col-
lected as the gold standard impact summary for the
paper.

We assume that the title of a paper will always
be included in the summary, so we excluded the ti-
tle both when constructing the gold standard and
when generating a summary. The gold standard
summaries have a minimum length of 5 sentences
and a maximum length of 18 sentences; the me-
dian length is 9 sentences. These 14 impact-based
summaries are used as gold standards for our exper-
iments, based on which all summaries generated by
the system are evaluated. This data set is available at
http://timan.cs.uiuc.edu/data/impact.html. We must
admit that using only 14 papers and only one expert
for evaluation is a limitation of our work. However,

2http://www.acm.org/dl

going beyond the 14 papers would risk reducing the
reliability of impact judgment due to the sparseness
of citations. How to develop a better test collection
is an important future direction.

5.1.2 Evaluation Metrics

Following the current practice in evaluating sum-
marization, particularly DUC3, we use the ROUGE
evaluation package (Lin and Hovy, 2003). Among
ROUGE metrics, ROUGE-N (models n-gram co-
occurrence, N = 1, 2) and ROUGE-L (models
longest common sequence) generally perform well
in evaluating both single-document summarization
and multi-document summarization (Lin and Hovy,
2003). Since they are general evaluation measures
for summarization, they are also applicable to eval-
uating the MEAD-Doc+Cite baseline method to be
described below. Thus although we evaluated our
methods with all the metrics provided by ROUGE,
we only report ROUGE-1 and ROUGE-L in this pa-
per (other metrics give very similar results).

5.1.3 Baseline methods

Since impact summarization has not been previ-
ously studied, there is no natural baseline method to
compare with. We thus adapt some state-of-the-art
conventional summarization methods implemented
in the MEAD toolkit (Radev et al., 2003)4 to obtain
three baseline methods: (1) LEAD: It simply ex-
tracts sentences from the beginning of a paper, i.e.,
sentences in the abstract or beginning of the intro-
duction section; we include LEAD to see if such
“leading sentences” reflect the impact of a paper as
authors presumably would expect to summarize a
paper’s contributions in the abstract. (2) MEAD-
Doc: It uses the single-document summarizer in
MEAD to generate a summary based solely on the
original paper; comparison with this baseline can
tell us how much better we can do than a conven-
tional topic-based summarizer that does not consider
the citation context. (3) MEAD-Doc+Cite: Here
we concatenate all the citation contexts in a paper to
form a “citation document” and then use the MEAD
multidocument summarizer to generate a summary
from the original paper plus all its citation docu-
ments; this baseline represents a reasonable way

3http://duc.nist.gov/
4“http://www.summarization.com/mead/”

820



Sum. Length Metric Random LEAD MEAD-Doc MEAD-Doc+Cite KL-Divergence
3 ROUGE-1 0.163 0.167 0.301* 0.248 0.323
3 ROUGE-L 0.144 0.158 0.265 0.217 0.299
5 ROUGE-1 0.230 0.301 0.401 0.333 0.467
5 ROUGE-L 0.214 0.292 0.362 0.298 0.444
10 ROUGE-1 0.430 0.514 0.575 0.472 0.649
10 ROUGE-L 0.396 0.494 0.535 0.428 0.622
15 ROUGE-1 0.538 0.610 0.685 0.552 0.730
15 ROUGE-L 0.499 0.586 0.650 0.503 0.705

Table 1: Performance Comparison of Summarizers

of applying an existing summarization method to
generate an impact-based summary. Note that this
method may extract sentences in the citation con-
texts but not in the original paper.

5.2 Basic Results

We first show some basic results of impact sum-
marization in Table 1. They are generated us-
ing constant coefficient interpolation for the impact
language model (i.e., Equation 3) with δ = 0.8,
weighted maximum likelihood estimate for the ci-
tation context model (i.e., Equation 5) with α = 3,
and µs = 1, 000 for candidate sentence smoothing
(Equation 1). These results are not necessarily opti-
mal as will be seen when we examine parameter and
method variations.

From Table 1, we see clearly that our method
consistently outperforms all the baselines. Among
the baselines, MEAD-Doc is consistently better than
both LEAD and MEAD-Doc+Cite. While MEAD-
Doc’s outperforming LEAD is not surprising, it is
a bit surprising that MEAD-Doc also outperforms
MEAD-Doc+Cite as the latter uses both the cita-
tion context and the original document. One possi-
ble explanation may be that MEAD is not designed
for impact summarization and it has been trapped
by the distracting content in the citation context 5.
Indeed, this can also explain why MEAD-Doc+Cite
tends to perform worse than LEAD by ROUGE-L
since if MEAD-Doc+Cite picks up sentences from
the citation context rather than the original papers,
it would not match as well with the gold standard
as LEAD which selects sentences from the origi-

5One anonymous reviewer suggested an interesting im-
provement to the MEAD-Doc+Cite baseline, in which we
would first extract sentences from the citation context and then
for each extracted sentence find a similar one in the original pa-
per. Unfortunately, we did not have time to test this approach
before the deadline for the camera-ready version of this paper.

nal papers. These results thus show that conven-
tional summarization techniques are inadequate for
impact summarization, and the proposed language
modeling methods are more effective for generating
impact-based summaries.

In Table 2, we show a sample impact-based sum-
mary and the corresponding MEAD-Doc regular
summary. We see that the regular summary tends
to have general sentences about the problem, back-
ground and techniques, not very informative in con-
veying specific contributions of the paper. None of
these sentences was selected by the human expert. In
contrast, the sentences in the impact summary cover
several details of the impact of the paper (i.e., spe-
cific smoothing methods especially Dirichlet prior,
sensitivity of performance to smoothing, and dual
role of smoothing), and sentences 4 and 6 are also
among the 8 sentences picked by the human expert.
Interestingly, neither sentence is in the abstract of
the original paper, suggesting a deviation of the ac-
tual impact of a paper and that perceived by the au-
thor(s).

5.3 Component analysis

We now turn to examine the effectiveness of each
component in the proposed methods and different
strategies for estimating θI .
Effectiveness of interpolation: We hypothesized
that we need to use both the original document and
the citation context to estimate θI . To test this hy-
pothesis, we compare the results of using only d,
only the citation context, and interpolation of them
in Table 3. We show two different strategies of inter-
polation (i.e., constant coefficient with δ = 0.8 and
Dirichlet with µc = 20, 000) as described in Sec-
tion 4.

From Table 3, we see that both strategies of in-
terpolation indeed outperform using either the origi-

821



Impact-based summary:
1. Figure 5: Interpolation versus backoff for Jelinek-Mercer (top), Dirichlet smoothing (middle), and absolute discounting (bottom).
2. Second, one can de-couple the two different roles of smoothing by adopting a two stage smoothing strategy in which Dirichlet smoothing is
first applied to implement the estimation role and Jelinek-Mercer smoothing is then applied to implement the role of query modeling
3. We find that the backoff performance is more sensitive to the smoothing parameter than that of interpolation, especially in Jelinek-Mercer
and Dirichlet prior.
4. We then examined three popular interpolation-based smoothing methods (Jelinek-Mercer method, Dirichlet priors, and absolute discounting),
as well as their backoff versions, and evaluated them using several large and small TREC retrieval testing collections.
summary 5. By rewriting the query-likelihood retrieval model using a smoothed document language model, we derived a general retrieval
formula where the smoothing of the document language model can be interpreted in terms of several heuristics used intraditional models,
including TF-IDF weighting and document length normalization.
6. We find that the retrieval performance is generally sensitive to the smoothing parameters, suggesting that an understanding and appropriate
setting of smoothing parameters is very important in the language modeling approach.
Regular summary (generated using MEAD-Doc):
1. Language modeling approaches to information retrieval are attractive and promising because they connect the problem of retrieval with that
of language model estimation, which has been studied extensively in other application areas such as speech recognition.
2. The basic idea of these approaches is to estimate a language model for each document, and then rank documents by the likelihood of the
query according to the estimated language model.
3. On the one hand, theoretical studies of an underlying model have been developed; this direction is, for example, represented by the various
kinds of logic models and probabilistic models (e.g., [14, 3, 15, 22]).
4. After applying the Bayes’ formula and dropping a document-independent constant (since we are only interested in ranking documents), we
have p(d|q) ∝ (q|d)p(d).
5. As discussed in [1], the righthand side of the above equation has an interesting interpretation, where, p(d) is our prior belief that d is relevant
to any query and p(q|d) is the query likelihood given the document, which captures how well the document ”fits” the particular query q.
6. The probability of an unseen word is typically taken as being proportional to the general frequency of the word, e.g., as computed using the
document collection.

Table 2: Impact-based summary vs. regular summary for the paper “A study of smoothing methods for language
models applied to ad hoc information retrieval”.

nal document model (p(w|d)) or the citation context
model (p(w|C)) alone, which confirms that both the
original paper and the citation context are important
for estimating θI . We also see that using the citation
context alone is better than using the original paper
alone, which is expected. Between the two strate-
gies, Dirichlet dynamic coefficient is slightly better
than constant coefficient (CC), after optimizing the
interpolation parameter for both strategy.

Interpolation
Measure P (w|d) P (w|C) ConstCoef Dirichlet

ROUGE-1 0.529 0.635 0.643 0.647
ROUGE-L 0.501 0.607 0.619 0.623

Table 3: Effectiveness of interpolation

Citation authority and proximity: These heuris-
tics are very interesting to study as they are unique
to impact summarization and not well studied in the
existing summarization work.

pg(s) pr(s)=1/αk

pr(s) off α = 2 α = 3 α = 4
Off 0.685 0.711 0.714 0.700
On 0.708 0.712 0.706 0.703

Table 4: Authority (pg(s)) and proximity (pr(s))

In Table 4, we show the ROUGE-L values for var-
ious combinations of these two heuristics (summary
length is 15). We turn off either pg(s) or pr(s) by
setting it to a constant; when both are turned off, we
have the unweighted MLE of p(w|C) (Equation 4).
Clearly, using weighted MLE with any of the two
heuristics is better than the unweighted MLE, indi-
cating that both heuristics are effective. However,
combining the two heuristics does not always im-
prove over using a single one. Since intuitively these
two heuristics are orthogonal, this may suggest that
our way of combining the two scores (i.e., taking a
product of them) may not be optimal; further study
is needed to better understand this. The ROUGE-1
results are similar.

Tuning of other parameters: There are three other
parameters which need to be tuned: (1) µs for can-
didate sentence smoothing (Equation 1); (2) µc in
Dirichlet interpolation for impact model estimation
(Equation 2); and (3) δ in constant coefficient inter-
polation (Equation 3). We have examined the sen-
sitivity of performance to these parameters. In gen-
eral, for a wide range of values of these parameters,
the performance is relatively stable and near opti-
mal. Specifically, the performance is near optimal as

822



long as µs and µc are sufficiently large (µs ≥ 1000,
µc ≥ 20, 000), and the interpolation parameter δ is
between 0.4 and 0.9.

6 Related Work

General text summarization, including single docu-
ment summarization (Luhn, 1958; Goldstein et al.,
1999) and multi-document summarization (Kraaij et
al., 2001; Radev et al., 2003) has been well stud-
ied; our work is under the framework of extractive
summarization (Luhn, 1958; McKeown and Radev,
1995; Goldstein et al., 1999; Kraaij et al., 2001),
but our problem formulation differs from any exist-
ing formulation of the summarization problem. It
differs from regular single-document summarization
because we utilize extra information (i.e. citation
contexts) to summarize the impact of a paper. It also
differs from regular multi-document summarization
because the roles of original documents and cita-
tion contexts are not equivalent. Specifically, cita-
tion contexts serve as an indicator of the impact of
the paper, but the summary is generated by extract-
ing the sentences from the original paper.

Technical paper summarization has also been
studied (Paice, 1981; Paice and Jones, 1993; Sag-
gion and Lapalme, 2002; Teufel and Moens, 2002),
but the previous work did not explore citation con-
text to emphasize the impact of papers.

Citation context has been explored in several
studies (Nakov et al., 2004; Ritchie et al., 2006;
Schwartz et al., 2007; Siddharthan and Teufel,
2007). However, none of the previous studies has
used citation context in the same way as we did,
though the potential of directly using citation sen-
tences (called citances) to summarize a paper was
pointed out in (Nakov et al., 2004).

Recently, people have explored various types of
auxiliary knowledge such as hyperlinks (Delort et
al., 2003) and clickthrough data (Sun et al., 2005), to
summarize a webpage; such work is related to ours
as anchor text is similar to citation context, but it is
based on a standard formulation of multi-document
summarization and would contain only sentences
from anchor text.

Our work is also related to work on using lan-
guage models for retrieval (Ponte and Croft, 1998;
Zhai and Lafferty, 2001b; Lafferty and Zhai, 2001)

and summarization (Kraaij et al., 2001). However,
we do not have an explicit query and constructing
the impact model is a novel exploration. We also
proposed new language models to capture the im-
pact.

7 Conclusions

We have defined and studied the novel problem of
summarizing the impact of a research paper. We cast
the problem as an impact sentence retrieval problem,
and proposed new language models to model the im-
pact of a paper based on both the original content
of the paper and its citation contexts in a literature
collection with consideration of citation autority and
proximity.

To evaluate impact summarization, we created a
test set based on ACM SIGIR papers. Experiment
results on this test set show that the proposed im-
pact summarization methods are effective and out-
perform several baselines that represent the existing
summarization methods.

An important future work is to construct larger
test sets (e.g., of biomedical literature) to facilitate
evaluation of impact summarization. Our formula-
tion of the impact summarization problem can be
further improved by going beyond sentence retrieval
and considering factors such as redundancy and co-
herency to better organize an impact summary. Fi-
nally, automatically generating impact-based sum-
maries can not only help users access and digest
influential research publications, but also facilitate
other literature mining tasks such as milestone min-
ing and research trend monitoring. It would be in-
teresting to explore all these applications.

Acknowledgments

We are grateful to the anonymous reviewers for their
constructive comments. This work is in part sup-
ported by a Yahoo! Graduate Fellowship and NSF
grants under award numbers 0713571, 0347933, and
0428472.

References

Sergey Brin and Lawrence Page. 1998. The anatomy
of a large-scale hypertextual web search engine. In
Proceedings of the Seventh International Conference
on World Wide Web, pages 107–117.

823



J.-Y. Delort, B. Bouchon-Meunier, and M. Rifqi. 2003.
Enhanced web document summarization using hyper-
links. In Proceedings of the Fourteenth ACM Confer-
ence on Hypertext and Hypermedia, pages 208–215.

C. Lee Giles, Kurt D. Bollacker, and Steve Lawrence.
1998. Citeseer: an automatic citation indexing sys-
tem. In Proceedings of the Third ACM Conference on
Digital Libraries, pages 89–98.

Jade Goldstein, Mark Kantrowitz, Vibhu Mittal, and
Jaime Carbonell. 1999. Summarizing text documents:
sentence selection and evaluation metrics. In Proceed-
ings of ACM SIGIR 99, pages 121–128.

Nancy R. Kaplan and Michael L. Nelson. 2000. Deter-
mining the publication impact of a digital library. J.
Am. Soc. Inf. Sci., 51(4):324–339.

W. Kraaij, M. Spitters, and M. van der Heijden. 2001.
Combining a mixture language model and naive bayes
for multi-document summarisation. In Proceedings of
the DUC2001 workshop.

John Lafferty and Chengxiang Zhai. 2001. Document
language models, query models, and risk minimiza-
tion for information retrieval. In Proceedings of ACM
SIGIR 2001, pages 111–119.

Chin-Yew Lin and Eduard Hovy. 2003. Automatic evalu-
ation of summaries using n-gram co-occurrence statis-
tics. In Proceedings of the 2003 Conference of the
North American Chapter of the Association for Com-
putational Linguistics on Human Language Technol-
ogy, pages 71–78.

H. P. Luhn. 1958. The automatic creation of literature
abstracts. IBM Journal of Research and Development,
2(2):159–165.

D. MacKay and L. Peto. 1995. A hierarchical Dirich-
let language model. Natural Language Engineering,
1(3):289–307.

Kathleen McKeown and Dragomir R. Radev. 1995. Gen-
erating summaries of multiple news articles. In Pro-
ceedings of the 18th Annual International ACM SIGIR
Conference on Research and Development in Informa-
tion Retrieval, pages 74–82.

P. Nakov, A. Schwartz, and M. Hearst. 2004. Citances:
Citation sentences for semantic analysis of bioscience
text. In Proceedings of ACM SIGIR’04 Workshop on
Search and Discovery in Bioinformatics.

Chris D. Paice and Paul A. Jones. 1993. The identifi-
cation of important concepts in highly structured tech-
nical papers. In Proceedings of the 16th Annual In-
ternational ACM SIGIR Conference on Research and
Development in Information Retrieval, pages 69–78.

C. D. Paice. 1981. The automatic generation of literature
abstracts: an approach based on the identification of
self-indicating phrases. In Proceedings of the 3rd An-
nual ACM Conference on Research and Development
in Information Retrieval, pages 172–191.

Jay M. Ponte and W. Bruce Croft. 1998. A language
modeling approach to information retrieval. In Pro-
ceedings of the 21st Annual International ACM SIGIR
Conference on Research and Development in Informa-
tion Retrieval, pages 275–281.

Dragomir R. Radev, Eduard Hovy, and Kathleen McKe-
own. 2002. Introduction to the special issue on sum-
marization. Comput. Linguist., 28(4):399–408.

Dragomir R. Radev, Simone Teufel, Horacio Saggion,
Wai Lam, John Blitzer, Hong Qi, Arda Celebi, Danyu
Liu, and Elliott Drabek. 2003. Evaluation challenges
in large-scale document summarization: the mead
project. In Proceedings of the 41st Annual Meeting
on Association for Computational Linguistics, pages
375–382.

A. Ritchie, S. Teufel, and S. Robertson. 2006. Creating
a test collection for citation-based ir experiments. In
Proceedings of the HLT-NAACL 2006, pages 391–398.

S. Robertson and K. Sparck Jones. 1976. Relevance
weighting of search terms. Journal of the American
Society for Information Science, 27:129–146.

Hpracop Saggion and Guy Lapalme. 2002. Generating
indicative-informative summaries with sumUM. Com-
putational Linguistics, 28(4):497–526.

A. S. Schwartz, A. Divoli, and M. A. Hearst. 2007. Mul-
tiple alignment of citation sentences with conditional
random fields and posterior decoding. In Proceedings
of the 2007 EMNLP-CoNLL, pages 847–857.

A. Siddharthan and S. Teufel. 2007. Whose idea was
this, and why does it matter? attributing scientific
work to citations. In Proceedings of NAACL/HLT-07,
pages 316–323.

Jian-Tao Sun, Dou Shen, Hua-Jun Zeng, Qiang Yang,
Yuchang Lu, and Zheng Chen. 2005. Web-page sum-
marization using clickthrough data. In Proceedings
of the 28th Annual International ACM SIGIR Confer-
ence on Research and Development in Information Re-
trieval, pages 194–201.

Simone Teufel and Marc Moens. 2002. Summariz-
ing scientific articles: experiments with relevance and
rhetorical status. Comput. Linguist., 28(4):409–445.

ChengXiang Zhai and John Lafferty. 2001a. Model-
based feedback in the language modeling approach
to information retrieval. In Proceedings of the Tenth
International Conference on Information and Knowl-
edge Management (CIKM 2001), pages 403–410.

Chengxiang Zhai and John Lafferty. 2001b. A study
of smoothing methods for language models applied to
ad hoc information retrieval. In Proceedings of the
24th Annual International ACM SIGIR Conference on
Research and Development in Information Retrieval,
pages 334–342.

824


