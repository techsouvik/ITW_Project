






















































Handling phrase reorderings for machine translation


Proceedings of the ACL-IJCNLP 2009 Conference Short Papers, pages 241–244,
Suntec, Singapore, 4 August 2009. c©2009 ACL and AFNLP

Handling phrase reorderings for machine translation
Yizhao Ni, Craig J. Saunders∗, Sandor Szedmak and Mahesan Niranjan

ISIS Group
School of Electronics and Computer Science

University of Southampton
Southampton, SO17 1BJ

United Kingdom
yn05r@ecs.soton.ac.uk, craig.saunders@xrce.xerox.com,

{ss03v,mn}@ecs.soton.ac.uk

Abstract

We propose a distance phrase reordering
model (DPR) for statistical machine trans-
lation (SMT), where the aim is to cap-
ture phrase reorderings using a structure
learning framework. On both the reorder-
ing classification and a Chinese-to-English
translation task, we show improved perfor-
mance over a baseline SMT system.

1 Introduction

Word or phrase reordering is a common prob-
lem in bilingual translations arising from dif-
ferent grammatical structures. For example,
in Chinese the expression of the date follows
“Year/Month/Date”, while when translated into
English, “Month/Date/Year” is often the correct
grammar. In general, the fluency of machine trans-
lations can be greatly improved by obtaining the
correct word order in the target language.

As the reordering problem is computation-
ally expensive, a word distance-based reordering
model is commonly used among SMT decoders
(Koehn, 2004), in which the costs of phrase move-
ments are linearly proportional to the reordering
distance. Although this model is simple and effi-
cient, the content independence makes it difficult
to capture many distant phrase reordering caused
by the grammar. To tackle the problem, (Koehn
et al., 2005) developed a lexicalized reordering
model that attempted to learn the phrase reorder-
ing based on content. The model learns the local
orientation (e.g. “monotone” order or “switching”
order) probabilities for each bilingual phrase pair
using Maximum Likelihood Estimation (MLE).
These orientation probabilities are then integrated
into an SMT decoder to help finding a Viterbi–best
local orientation sequence. Improvements by this

∗the author’s new address: Xerox Research Centre Europe
6, Chemin de Maupertuis, 38240 Meylan France.

model have been reported in (Koehn et al., 2005).
However, the amount of the training data for each
bilingual phrase is so small that the model usually
suffers from the data sparseness problem. Adopt-
ing the idea of predicting the orientation, (Zens
and Ney, 2006) started exploiting the context and
grammar which may relate to phrase reorderings.
In general, a Maximum Entropy (ME) framework
is utilized and the feature parameters are tuned
by a discriminative model. However, the training
times for ME models are usually relatively high,
especially when the output classes (i.e. phrase re-
ordering orientations) increase.

Alternative to the ME framework, we propose
using a classification scheme here for phrase re-
orderings and employs a structure learning frame-
work. Our results confirm that this distance phrase
reordering model (DPR) can lead to improved per-
formance with a reasonable time efficiency.

Figure 1: The phrase reordering distance d.

2 Distance phrase reordering (DPR)

We adopt a discriminative model to capture the
frequent distant reordering which we call distance
phrase reordering. An ideal model would consider
every position as a class and predict the position of
the next phrase, although in practice we must con-
sider a limited set of classes (denoted as Ω). Using
the reordering distance d (see Figure 1) as defined
by (Koehn et al., 2005), we extend the two class
model in (Xiong et al., 2006) to multiple classes
(e.g. three–class setup Ω = {d < 0, d = 0, d >
0}; or five–class setup Ω = {d ≤ −5,−5 < d <
0, d = 0, 0 < d < 5, d ≥ 5}). Note that the more

241



classes it has, the closer it is to the ideal model, but
the smaller amount of training samples it would
receive for each class.

2.1 Reordering Probability model and
training algorithm

Given a (source, target) phrase pair (f̄j , ēi) with
f̄j = [fjl , . . . , fjr ] and ēi = [eil , . . . , eir ], the dis-
tance phrase reordering probability has the form

p(o|f̄j , ēi) :=
h
(
wTo φ(f̄j , ēi)

)∑
o′∈Ω h

(
wTo′φ(f̄j , ēi)

) (1)
where wo = [wo,0, . . . , wo,dim(φ)]

T is the weight
vector measuring features’ contribution to an ori-
entation o ∈ Ω, φ is the feature vector and h is a
pre-defined monotonic function. As the reorder-
ing orientations tend to be interdependent, learn-
ing {wo}o∈Ω is more than a multi–class classifi-
cation problem. Take the five–class setup for ex-
ample, if an example in class d ≤ −5 is classified
in class −5 < d < 5, intuitively the loss should be
smaller than when it is classified in class d > 5.
The output (orientation) domain has an inherent
structure and the model should respect it. Hence,
we utilize the structure learning framework pro-
posed in (Taskar et al., 2003) which is equivalent
to minimising the sum of the classification errors

min
w

1
N

N∑
n=1

ρ(o, f̄nj , ē
n
i ,w) +

λ

2
‖w‖2 (2)

where λ ≥ 0 is a regularisation parameter,
ρ(o, f̄j , ēi,w) = max{0,maxo′ 6=o[4(o, o′)+

wTo′φ(f̄j , ēi)]−wTo φ(f̄j , ēi)}
is a structured margin loss function with

4(o, o′) =



0 if o = o′

0.5 if o and o′ are close in Ω
1 else

measuring the distance between pseudo orienta-
tion o′ and the true one o. Theoretically, this loss
requires that orientation o′ which are “far away”
from the true one o must be classified with a large
margin while nearby candidates are allowed to
be classified with a smaller margin. At training
time, we used a perceptron–based structure learn-
ing (PSL) algorithm to learn {wo}o∈Ω which is
shown in Table 1.

2.1.1 Feature Extraction and Application
Following (Zens and Ney, 2006), we consider
different kinds of information extracted from the

Input: The samples
{
o, φ(f̄j , ēi)

}N
n=1

, step size η
Initialization: k = 0; wo,k = 0 ∀o ∈ Ω;
Repeat

for n = 1, 2, . . . , N do
for o′ 6= o get

V = maxo′
{
4(o, o′) + wTo′,kφ(f̄j , ēi)

}
o∗ = arg maxo′

{
4(o, o′) + wTo′,kφ(f̄j , ēi)

}
if wTo,kφ(f̄j , ēi) < V then

wo,k+1 = wo,k + ηφ(f̄j , ēi)
wo∗,k+1 = wo∗,k − ηφ(f̄j , ēi)

k = k + 1
until converge
Output: wo,k+1 ∀o ∈ Ω

Table 1: Perceptron-based structure learning.

phrase environment (see Table 2), where given a
sequence s (e.g. s = [fjl−z, . . . , fjl ]), the features
selected are φu(s

|u|
p ) = δ(s

|u|
p , u), with the

indicator function δ(·, ·), p = {jl − z, . . . , jr + z}
and string s|u|p = [fp, . . . , fp+|u|]. Hence, the
phrase features are distinguished by both the
content u and its start position p. For exam-
ple, the left side context features for phrase
pair (xiang gang, Hong Kong) in Figure 1 are
{δ(s10, “zhou”), δ(s11, “liu”), δ(s20, “zhou liu”)}.
As required by the algorithm, we then normalise
the feature vector φ̄t =

φt
‖φ‖ .

To train the DPR model, the training samples
{(f̄nj , ēni )}Nn=1 are extracted following the phrase
pair extraction procedure in (Koehn et al., 2005)
and form the sample pool, where the instances
having the same source phrase f̄j are considered
to be from the same cluster. A sub-DPR model is
then trained for each cluster using the PSL algo-
rithm. During the decoding, the DPR model finds
the corresponding sub-DPR model for a source
phrase f̄j and generates the reordering probability
for each orientation class using equation (1).

3 Experiments

Experiments used the Hong Kong Laws corpus1

(Chinese-to-English), where sentences of lengths
between 1 and 100 words were extracted and the
ratio of source/target lengths was no more than
2 : 1. The training and test sizes are 50, 290 and
1, 000 respectively.

1This bilingual Chinese-English corpus consists of mainly
legal and documentary texts from Hong Kong. The corpus is
aligned at the sentence level which are collected and revised
manually by the author. The full corpus will be released soon.

242



Features for source phrase f̄j Features for target phrase ēi

Context
Source word n–grams within a window

(length z) around the phrase edge [jl] and [jr]
Target word n–grams

of the phrase [eil , . . . , eir ]

Syntactic
Source word class tag n-grams within a

window (length z) around the phrase edge [jl] and [jr]
Target word class tag

n-grams of the phrase [eil , . . . , eir ]

Table 2: The environment for the feature extraction. The word class tags are provided by MOSES.

3.1 Classification Experiments

Figure 2: Classification results with respect to d.

We used GIZA++ to produce alignments, en-
abling us to compare using a DPR model against
a baseline lexicalized reordering model (Koehn et
al., 2005) that uses MLE orientation prediction
and a discriminative model (Zens and Ney, 2006)
that utilizes an ME framework. Two orientation
classification tasks are carried out: one with three–
class setup and one with five–class setup. We
discarded points that had long distance reorder-
ing (|d| > 15) to avoid some alignment errors
cause by GIZA++ (representing less than 5% of
the data). This resulted in data sizes shown in Ta-
ble 3. The classification performance is measured
by an overall precision across all classes and the
class-specific F1 measures and the experiments
are are repeated three times to asses variance.

Table 4 depicts the classification results ob-
tained, where we observed consistent improve-
ments for the DPR model over the baseline and
the ME models. When the number of classes
(orientations) increases, the average relative im-
provements of DPR for the switching classes
(i.e. d 6= 0) increase from 41.6% to 83.2% over
the baseline and from 7.8% to 14.2% over the ME

model, which implies a potential benefit of struc-
ture learning. Figure 2 further demonstrate the av-
erage accuracy for each reordering distance d. It
shows that even for long distance reordering, the
DPR model still performs well, while the MLE
baseline usually performs badly (more than half
examples are classified incorrectly). With so many
classification errors, the effect of this baseline in
an SMT system is in doubt, even with a powerful
language model. At training time, training a DPR
model is much faster than training an ME model
(both algorithms are coded in Python), especially
when the number of classes increase. This is be-
cause the generative iterative scaling algorithm of
an ME model requires going through all examples
twice at each round: one is for updating the condi-
tional distributions p(o|f̄j , ēi) and the other is for
updating {wo}o∈Ω. Alternatively, the PSL algo-
rithm only goes through all examples once at each
round, making it faster and more applicable for
larger data sets.

3.2 Translation experiments
We now test the effect of the DPR model in an
MT system, using MOSES (Koehn et al., 2005)
as a baseline system. To keep the comparison
fair, our MT system just replaces MOSES’s re-
ordering models with DPR while sharing all other
models (i.e. phrase translation probability model,
4-gram language model (A. Stolcke, 2002) and
beam search decoder). As in classification exper-
iments the three-class setup shows better results
in switching classes, we use this setup in DPR. In
detail, all consistent phrases are extracted from the
training sentence pairs and form the sample pool.
The three-class DPR model is then trained by the
PSL algorithm and the function h(z) = exp(z) is
applied to equation (1) to transform the prediction
scores. Contrasting the direct use of the reorder-
ing probabilities used in (Zens and Ney, 2006),
we utilize the probabilities to adjust the word
distance–based reordering cost, where the reorder-
ing cost of a sentence is computed as Po(f , e) =

243



Settings three–class setup five–class setup
Classes d < 0 d = 0 d > 0 d ≤ −5 −5 < d < 0 d = 0 0 < d < 5 d ≥ 5
Train 181, 583 755, 854 181, 279 82, 677 98, 907 755, 854 64, 881 116, 398
Test 5, 025 21, 106 5, 075 2, 239 2, 786 21, 120 1, 447 3, 629

Table 3: Data statistics for the classification experiments.

System three–class setup task
Precision d < 0 d = 0 d > 0 Training time (hours)

Lexicalized 77.1± 0.1 55.7± 0.1 86.5± 0.1 49.2± 0.3 1.0
ME 83.7± 0.3 67.9± 0.3 90.8± 0.3 69.2± 0.1 58.6
DPR 86.7± 0.1 73.3± 0.1 92.5± 0.2 74.6± 0.5 27.0

System five–class setup task
Precision d ≤ −5 −5 < d < 0 d = 0 0 < d < 5 d ≥ 5 Training Time (hours)

Lexicalized 74.3± 0.1 44.9± 0.2 32.0± 1.5 86.4± 0.1 29.2± 1.7 46.2± 0.8 1.3
ME 80.0± 0.2 52.1± 0.1 54.7± 0.7 90.4± 0.2 63.9± 0.1 61.8± 0.1 83.6
DPR 84.6± 0.1 60.0± 0.7 61.4± 0.1 92.6± 0.2 75.4± 0.6 68.8± 0.5 29.2

Table 4: Overall precision and class-specific F1 scores [%] using different number of orientation classes.
Bold numbers refer to the best results.

exp{−∑
m

dm
βp(o|f̄jm ,ēim )

} with tuning parameter β.
This distance–sensitive expression is able to fill
the deficiency of the three–class setup of DPR and
is verified to produce better results. For parameter
tuning, minimum-error-rating training (F. J. Och,
2003) is used in both systems. Note that there are
7 parameters needed tuning in MOSES’s reorder-
ing models, while only 1 requires tuning in DPR.
The translation performance is evaluated by four
MT measurements used in (Koehn et al., 2005).

Table 5 shows the translation results, where we
observe consistent improvements on most evalua-
tions. Indeed both systems produced similar word
accuracy, but our MT system does better in phrase
reordering and produces more fluent translations.

4 Conclusions and Future work

We have proposed a distance phrase reordering
model using a structure learning framework. The
classification tasks have shown that DPR is bet-
ter in capturing the phrase reorderings over the
lexicalized reordering model and the ME model.
Moreover, compared with ME DPR is much faster
and more applicable to larger data sets. Transla-
tion experiments carried out on the Chinese-to-
English task show that DPR gives more fluent
translation results, which verifies its effectiveness.
For future work, we aim at improving the predic-
tion accuracy for the five-class setup using a richer
feature set before applying it to an MT system, as
DPR can be more powerful if it is able to provide
more precise phrase position for the decoder. We
will also apply DPR on a larger data set to test its

performance as well as its time efficiency.

Tasks Measure MOSES DPR
BLEU [%] 44.7± 1.2 47.1± 1.3

CH–EN word accuracy 76.5± 0.6 76.1± 1.5
NIST 8.82± 0.11 9.04± 0.26

METEOR [%] 66.1± 0.8 66.4± 1.1

Table 5: Four evaluations for the MT experiments.
Bold numbers refer to the best results.

References
P. Koehn. 2004. Pharaoh: a beam search decoder for

phrase–based statistical machine translation models.
In Proc. of AMTA 2004, Washington DC, October.

P. Koehn, A. Axelrod, A. B. Mayne, C. Callison–
Burch, M. Osborne and D. Talbot. 2005. Ed-
inburgh system description for the 2005 IWSLT
speech translation evaluation. In Proc. of IWSLT,
Pittsburgh, PA.

F. J. Och. 2003. SRILM - An Extensible Language
Modeling Toolkit. In Proc. Intl. Conf. Spoken Lan-
guage Processing, Colorado, September.

A. Stolcke. 2002. Minimum error rate training in sta-
tistical machine translation. In Proc. ACL, Japan.

B. Taskar, C. Guestrin, and D.Koller. 2003. Max–
margin Markov networks. In Proc. NIPS, Vancou-
ver, Canada, December.

D. Xiong, Q. Liu and S. Lin. 2006. Maximum En-
tropy Based Phrase Reordering Model for Statistical
Machine Translation. In Proc. of ACL, Sydney, July.

R. Zens and H. Ney. 2006. Discriminative Reordering
Models for Statistical Machine Translation. In Proc.
of ACL, pages 55–63, New York City, June.

244


